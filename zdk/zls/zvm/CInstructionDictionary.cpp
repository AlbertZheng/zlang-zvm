/**
 * $Source: /backup/cvsroot/project/pnids/zdk/zls/zvm/CInstructionDictionary.cpp,v $
 *
 * $Date: 2001/08/11 18:54:42 $
 *
 * $Revision: 1.2 $
 *
 * $Name:  $
 *
 * $Author: zls $
 *
 * Copyright(C) since 1998 by Albert Zheng - 郑立松, All Rights Reserved.
 *
 * lisong.zheng@gmail.com
 *
 * $State: Exp $
 */


#include <zls/zvm/CInstructionDictionary.hpp>
#include <zls/zvm/InstructionCode.hpp>

#include <zls/zvm/CZVMVirtualThread.hpp>


ZLS_BEGIN_NAMESPACE(zvm)


zfc::CSingletonFactoryT<CInstructionDictionary> GciInstructionDictionaryFactory;


CInstructionDictionary::TInstructionDictionaryEntry::TInstructionDictionaryEntry(
      TZVMICode _nICode,
      const char * _pszText,
      UCHAR _nOperandByteCount,
      TInstructionOperandType _eOperandType,
      UWORD _uwMaskOfConstantPoolElementTag,
      TInstructionInterpreter _pfuncInterpreter)
  : nInstructionCode(_nICode),
    pszInstructionText(_pszText),
    nOperandByteCount(_nOperandByteCount),
    eOperandType(_eOperandType),
    uwMaskOfConstantPoolElementTag(_uwMaskOfConstantPoolElementTag),
    pfuncInterpreter(_pfuncInterpreter)
{ }


void CInstructionDictionary::AppendInstructionEntry(TZVMICode nInstructionCode,
                                                    const char * pszText,
                                                    UCHAR nOperandByteCount,
                                                    TInstructionOperandType eOperandType,
                                                    UWORD uwMaskOfConstantPoolElementTag,
                                                    TInstructionInterpreter pfuncInterpreter)
{
  TInstructionDictionaryEntry * psiEntry = new __OPTION(_THROW)
                     TInstructionDictionaryEntry(nInstructionCode,
                                                 pszText,
                                                 nOperandByteCount,
                                                 eOperandType,
                                                 uwMaskOfConstantPoolElementTag,
                                                 pfuncInterpreter);

  #if defined(ENABLE_ZVM_OPTIMIZATION) && ENABLE_ZVM_OPTIMIZATION > 2  // 如果采用三级优化
    _apsiInstructionDictionary[nInstructionCode] = psiEntry;
  #else
    static const char * __PRETTY_FUNC__ = ZLS_PRETTY_FUNCTION("CInstructionDictionary::AppendInstructionEntry()");
    UCHAR uchBaseICode = nInstructionCode >> 8;
    UCHAR uchLowByteOfICode = nInstructionCode & 0x00ff;

    LogAssert0(uchBaseICode != 0, "Shit, a bug");
    LogAssert0(uchLowByteOfICode != 0, "Shit, a bug");

    _aapsiInstructionDictionary[uchBaseICode][uchLowByteOfICode - MIN_LOW_BYTE_OF_INSTRUCTION_CODE] = psiEntry;
  #endif
}


const CInstructionDictionary::TInstructionDictionaryEntry *
CInstructionDictionary::SeekInstructionDictionary(TZVMICode nInstructionCode) const
{
  #if defined(ENABLE_ZVM_OPTIMIZATION) && ENABLE_ZVM_OPTIMIZATION > 2  // 如果采用三级优化
    return _apsiInstructionDictionary[nInstructionCode];
  #else
    static const char * __PRETTY_FUNC__ = ZLS_PRETTY_FUNCTION("CInstructionDictionary::SeekInstructionDictionary()");
    UCHAR uchBaseICode = nInstructionCode >> 8;
    UCHAR uchLowByteOfICode = nInstructionCode & 0x00ff;

    LogAssert0(uchBaseICode != 0, "Shit, a bug");
    LogAssert0(uchLowByteOfICode != 0, "Shit, a bug");

    return _aapsiInstructionDictionary[uchBaseICode][uchLowByteOfICode - MIN_LOW_BYTE_OF_INSTRUCTION_CODE];
  #endif
}


TInstructionInterpreter
CInstructionDictionary::GetInstructionInterpreter(TZVMICode nInstructionCode) const
{
  #if defined(ENABLE_ZVM_OPTIMIZATION) && ENABLE_ZVM_OPTIMIZATION > 2  // 如果采用三级优化
  TInstructionDictionaryEntry * pciEntry = _apsiInstructionDictionary[nInstructionCode];
  #else
  UCHAR uchBaseICode = nInstructionCode >> 8;
  UCHAR uchLowByteOfICode = nInstructionCode & 0x00ff;
  TInstructionDictionaryEntry * pciEntry = _aapsiInstructionDictionary[uchBaseICode][uchLowByteOfICode - MIN_LOW_BYTE_OF_INSTRUCTION_CODE];
  #endif
  return pciEntry->pfuncInterpreter;
}


CInstructionDictionary::~CInstructionDictionary()
{
  #if defined(ENABLE_ZVM_OPTIMIZATION) && ENABLE_ZVM_OPTIMIZATION > 2  // 如果采用三级优化
    for (int i = 0; i < 65536; ++i)
    {
      delete _apsiInstructionDictionary[i];
    }
  #else
    for (int i = 0; i < 256; ++i)
    {
      for (int j = 0; j < CAPACITY_OF_LOW_BYTE_OF_INSTRUCTION_CODE; ++j)
      {
        delete _aapsiInstructionDictionary[i][j];
      }
    }
  #endif
}


CInstructionDictionary::CInstructionDictionary()
{
#define __GLOBAL_VARIABLE_INSTRUCTION__ \
                         sizeof(TZVMIndex), \
                         OPERAND_IS_CONSTANT_POOL_INDEX, \
                         CONSTANT_POOL_ELEMENT_TAG_GLOBAL_VARIABLE_REFERENCE

#define __STACK_VARIABLE_INSTRUCTION__  \
                         sizeof(SWORD), \
                         OPERAND_IS_SIGNED_NUMBER, \
                         0

#define __NONE_OPERAND_INSTRUCTION__    \
                         0, \
                         NONE_OPERAND, \
                         0

#define __CODE_LABEL_INSTRUCTION__      \
                         sizeof(SDWORD), \
                         OPERAND_IS_ZVM_CODE_LABEL, \
                         0

  #if defined(ENABLE_ZVM_OPTIMIZATION) && ENABLE_ZVM_OPTIMIZATION > 2  // 如果采用三级优化
    for (int i = 0; i < 65536; ++i)
    {
      _apsiInstructionDictionary[i] = 0;
    }
  #else
    for (int i = 0; i < 256; ++i)
    {
      for (int j = 0; j < CAPACITY_OF_LOW_BYTE_OF_INSTRUCTION_CODE; ++j)
      {
        _aapsiInstructionDictionary[i][j] = 0;
      }
    }
  #endif

  // load value指令
  AppendInstructionEntry(ZVM_loadBoolGlobalVariableValue,
                         "loadBoolGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadByteGlobalVariableValue,
                         "loadByteGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadSDWORDGlobalVariableValue,
                         "loadSDWORDGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadUDWORDGlobalVariableValue,
                         "loadUDWORDGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadSQWORDGlobalVariableValue,
                         "loadSQWORDGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadUQWORDGlobalVariableValue,
                         "loadUQWORDGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadDoubleGlobalVariableValue,
                         "loadDoubleGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadStringGlobalVariableValue,
                         "loadStringGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadRopeGlobalVariableValue,
                         "loadRopeGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadIPv4AddressGlobalVariableValue,
                         "loadIPv4AddressGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadPPortGlobalVariableValue,
                         "loadPPortGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortGlobalVariableValue);
  AppendInstructionEntry(ZVM_loadTableGlobalVariableValue,
                         "loadTableGlobalVariableValue",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadTableGlobalVariableValue);

  AppendInstructionEntry(ZVM_loadBoolStackVariableValue,
                         "loadBoolStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolStackVariableValue);
  AppendInstructionEntry(ZVM_loadByteStackVariableValue,
                         "loadByteStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteStackVariableValue);
  AppendInstructionEntry(ZVM_loadSDWORDStackVariableValue,
                         "loadSDWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDStackVariableValue);
  AppendInstructionEntry(ZVM_loadUDWORDStackVariableValue,
                         "loadUDWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDStackVariableValue);
  AppendInstructionEntry(ZVM_loadSQWORDStackVariableValue,
                         "loadSQWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDStackVariableValue);
  AppendInstructionEntry(ZVM_loadUQWORDStackVariableValue,
                         "loadUQWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDStackVariableValue);
  AppendInstructionEntry(ZVM_loadDoubleStackVariableValue,
                         "loadDoubleStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleStackVariableValue);
  AppendInstructionEntry(ZVM_loadStringStackVariableValue,
                         "loadStringStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringStackVariableValue);
  AppendInstructionEntry(ZVM_loadRopeStackVariableValue,
                         "loadRopeStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeStackVariableValue);
  AppendInstructionEntry(ZVM_loadIPv4AddressStackVariableValue,
                         "loadIPv4AddressStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressStackVariableValue);
  AppendInstructionEntry(ZVM_loadPPortStackVariableValue,
                         "loadPPortStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortStackVariableValue);
  AppendInstructionEntry(ZVM_loadTableStackVariableValue,
                         "loadTableStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadTableStackVariableValue);

  AppendInstructionEntry(ZVM_indirectLoadBoolStackVariableValue,
                         "indirectLoadBoolStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadBoolStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadByteStackVariableValue,
                         "indirectLoadByteStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadByteStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadSDWORDStackVariableValue,
                         "indirectLoadSDWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadSDWORDStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadUDWORDStackVariableValue,
                         "indirectLoadUDWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadUDWORDStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadSQWORDStackVariableValue,
                         "indirectLoadSQWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadSQWORDStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadUQWORDStackVariableValue,
                         "indirectLoadUQWORDStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadUQWORDStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadDoubleStackVariableValue,
                         "indirectLoadDoubleStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadDoubleStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadStringStackVariableValue,
                         "indirectLoadStringStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadStringStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadRopeStackVariableValue,
                         "indirectLoadRopeStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadRopeStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadIPv4AddressStackVariableValue,
                         "indirectLoadIPv4AddressStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadIPv4AddressStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadPPortStackVariableValue,
                         "indirectLoadPPortStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadPPortStackVariableValue);
  AppendInstructionEntry(ZVM_indirectLoadTableStackVariableValue,
                         "indirectLoadTableStackVariableValue",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadTableStackVariableValue);

  AppendInstructionEntry(ZVM_loadBoolTableElementValueByBoolKey,
                         "loadBoolTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByByteKey,
                         "loadBoolTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueBySDWORDKey,
                         "loadBoolTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByUDWORDKey,
                         "loadBoolTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueBySQWORDKey,
                         "loadBoolTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByUQWORDKey,
                         "loadBoolTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByDoubleKey,
                         "loadBoolTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByStringKey,
                         "loadBoolTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByRopeKey,
                         "loadBoolTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByIPv4AddressKey,
                         "loadBoolTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementValueByPPortKey,
                         "loadBoolTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadByteTableElementValueByBoolKey,
                         "loadByteTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByByteKey,
                         "loadByteTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueBySDWORDKey,
                         "loadByteTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByUDWORDKey,
                         "loadByteTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueBySQWORDKey,
                         "loadByteTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByUQWORDKey,
                         "loadByteTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByDoubleKey,
                         "loadByteTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByStringKey,
                         "loadByteTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByRopeKey,
                         "loadByteTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByIPv4AddressKey,
                         "loadByteTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadByteTableElementValueByPPortKey,
                         "loadByteTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByBoolKey,
                         "loadSDWORDTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByByteKey,
                         "loadSDWORDTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueBySDWORDKey,
                         "loadSDWORDTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByUDWORDKey,
                         "loadSDWORDTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueBySQWORDKey,
                         "loadSDWORDTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByUQWORDKey,
                         "loadSDWORDTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByDoubleKey,
                         "loadSDWORDTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByStringKey,
                         "loadSDWORDTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByRopeKey,
                         "loadSDWORDTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByIPv4AddressKey,
                         "loadSDWORDTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementValueByPPortKey,
                         "loadSDWORDTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByBoolKey,
                         "loadUDWORDTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByByteKey,
                         "loadUDWORDTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueBySDWORDKey,
                         "loadUDWORDTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByUDWORDKey,
                         "loadUDWORDTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueBySQWORDKey,
                         "loadUDWORDTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByUQWORDKey,
                         "loadUDWORDTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByDoubleKey,
                         "loadUDWORDTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByStringKey,
                         "loadUDWORDTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByRopeKey,
                         "loadUDWORDTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByIPv4AddressKey,
                         "loadUDWORDTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementValueByPPortKey,
                         "loadUDWORDTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByBoolKey,
                         "loadSQWORDTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByByteKey,
                         "loadSQWORDTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueBySDWORDKey,
                         "loadSQWORDTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByUDWORDKey,
                         "loadSQWORDTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueBySQWORDKey,
                         "loadSQWORDTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByUQWORDKey,
                         "loadSQWORDTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByDoubleKey,
                         "loadSQWORDTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByStringKey,
                         "loadSQWORDTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByRopeKey,
                         "loadSQWORDTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByIPv4AddressKey,
                         "loadSQWORDTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementValueByPPortKey,
                         "loadSQWORDTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByBoolKey,
                         "loadUQWORDTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByByteKey,
                         "loadUQWORDTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueBySDWORDKey,
                         "loadUQWORDTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByUDWORDKey,
                         "loadUQWORDTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueBySQWORDKey,
                         "loadUQWORDTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByUQWORDKey,
                         "loadUQWORDTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByDoubleKey,
                         "loadUQWORDTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByStringKey,
                         "loadUQWORDTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByRopeKey,
                         "loadUQWORDTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByIPv4AddressKey,
                         "loadUQWORDTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementValueByPPortKey,
                         "loadUQWORDTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByBoolKey,
                         "loadDoubleTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByByteKey,
                         "loadDoubleTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueBySDWORDKey,
                         "loadDoubleTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByUDWORDKey,
                         "loadDoubleTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueBySQWORDKey,
                         "loadDoubleTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByUQWORDKey,
                         "loadDoubleTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByDoubleKey,
                         "loadDoubleTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByStringKey,
                         "loadDoubleTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByRopeKey,
                         "loadDoubleTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByIPv4AddressKey,
                         "loadDoubleTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementValueByPPortKey,
                         "loadDoubleTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadStringTableElementValueByBoolKey,
                         "loadStringTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByByteKey,
                         "loadStringTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueBySDWORDKey,
                         "loadStringTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByUDWORDKey,
                         "loadStringTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueBySQWORDKey,
                         "loadStringTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByUQWORDKey,
                         "loadStringTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByDoubleKey,
                         "loadStringTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByStringKey,
                         "loadStringTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByRopeKey,
                         "loadStringTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByIPv4AddressKey,
                         "loadStringTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadStringTableElementValueByPPortKey,
                         "loadStringTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadRopeTableElementValueByBoolKey,
                         "loadRopeTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByByteKey,
                         "loadRopeTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueBySDWORDKey,
                         "loadRopeTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByUDWORDKey,
                         "loadRopeTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueBySQWORDKey,
                         "loadRopeTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByUQWORDKey,
                         "loadRopeTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByDoubleKey,
                         "loadRopeTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByStringKey,
                         "loadRopeTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByRopeKey,
                         "loadRopeTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByIPv4AddressKey,
                         "loadRopeTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementValueByPPortKey,
                         "loadRopeTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByBoolKey,
                         "loadIPv4AddressTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByByteKey,
                         "loadIPv4AddressTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueBySDWORDKey,
                         "loadIPv4AddressTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByUDWORDKey,
                         "loadIPv4AddressTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueBySQWORDKey,
                         "loadIPv4AddressTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByUQWORDKey,
                         "loadIPv4AddressTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByDoubleKey,
                         "loadIPv4AddressTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByStringKey,
                         "loadIPv4AddressTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByRopeKey,
                         "loadIPv4AddressTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByIPv4AddressKey,
                         "loadIPv4AddressTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementValueByPPortKey,
                         "loadIPv4AddressTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_loadPPortTableElementValueByBoolKey,
                         "loadPPortTableElementValueByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByBoolKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByByteKey,
                         "loadPPortTableElementValueByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByByteKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueBySDWORDKey,
                         "loadPPortTableElementValueBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueBySDWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByUDWORDKey,
                         "loadPPortTableElementValueByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByUDWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueBySQWORDKey,
                         "loadPPortTableElementValueBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueBySQWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByUQWORDKey,
                         "loadPPortTableElementValueByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByUQWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByDoubleKey,
                         "loadPPortTableElementValueByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByDoubleKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByStringKey,
                         "loadPPortTableElementValueByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByStringKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByRopeKey,
                         "loadPPortTableElementValueByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByRopeKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByIPv4AddressKey,
                         "loadPPortTableElementValueByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementValueByPPortKey,
                         "loadPPortTableElementValueByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementValueByPPortKey);

  AppendInstructionEntry(ZVM_indirectLoadStringValueFromAddress,
                         "indirectLoadStringValueFromAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadStringValueFromAddress);
  AppendInstructionEntry(ZVM_indirectLoadRopeValueFromAddress,
                         "indirectLoadRopeValueFromAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadRopeValueFromAddress);
  AppendInstructionEntry(ZVM_indirectLoadIPv4AddressValueFromAddress,
                         "indirectLoadIPv4AddressValueFromAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadIPv4AddressValueFromAddress);
  AppendInstructionEntry(ZVM_indirectLoadPPortValueFromAddress,
                         "indirectLoadPPortValueFromAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadPPortValueFromAddress);
  AppendInstructionEntry(ZVM_indirectLoadTableValueFromAddress,
                         "indirectLoadTableValueFromAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectLoadTableValueFromAddress);

  // load address指令
  AppendInstructionEntry(ZVM_loadBoolGlobalVariableAddress,
                         "loadBoolGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadByteGlobalVariableAddress,
                         "loadByteGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadSDWORDGlobalVariableAddress,
                         "loadSDWORDGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadUDWORDGlobalVariableAddress,
                         "loadUDWORDGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadSQWORDGlobalVariableAddress,
                         "loadSQWORDGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadUQWORDGlobalVariableAddress,
                         "loadUQWORDGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadDoubleGlobalVariableAddress,
                         "loadDoubleGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadStringGlobalVariableAddress,
                         "loadStringGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadRopeGlobalVariableAddress,
                         "loadRopeGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadIPv4AddressGlobalVariableAddress,
                         "loadIPv4AddressGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadPPortGlobalVariableAddress,
                         "loadPPortGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortGlobalVariableAddress);
  AppendInstructionEntry(ZVM_loadTableGlobalVariableAddress,
                         "loadTableGlobalVariableAddress",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadTableGlobalVariableAddress);

  AppendInstructionEntry(ZVM_loadBoolStackVariableAddress,
                         "loadBoolStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolStackVariableAddress);
  AppendInstructionEntry(ZVM_loadByteStackVariableAddress,
                         "loadByteStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteStackVariableAddress);
  AppendInstructionEntry(ZVM_loadSDWORDStackVariableAddress,
                         "loadSDWORDStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDStackVariableAddress);
  AppendInstructionEntry(ZVM_loadUDWORDStackVariableAddress,
                         "loadUDWORDStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDStackVariableAddress);
  AppendInstructionEntry(ZVM_loadSQWORDStackVariableAddress,
                         "loadSQWORDStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDStackVariableAddress);
  AppendInstructionEntry(ZVM_loadUQWORDStackVariableAddress,
                         "loadUQWORDStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDStackVariableAddress);
  AppendInstructionEntry(ZVM_loadDoubleStackVariableAddress,
                         "loadDoubleStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleStackVariableAddress);
  AppendInstructionEntry(ZVM_loadStringStackVariableAddress,
                         "loadStringStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringStackVariableAddress);
  AppendInstructionEntry(ZVM_loadRopeStackVariableAddress,
                         "loadRopeStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeStackVariableAddress);
  AppendInstructionEntry(ZVM_loadIPv4AddressStackVariableAddress,
                         "loadIPv4AddressStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressStackVariableAddress);
  AppendInstructionEntry(ZVM_loadPPortStackVariableAddress,
                         "loadPPortStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortStackVariableAddress);
  AppendInstructionEntry(ZVM_loadTableStackVariableAddress,
                         "loadTableStackVariableAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadTableStackVariableAddress);

  AppendInstructionEntry(ZVM_loadReferenceStackVariableReferenceToAddress,
                         "loadReferenceStackVariableReferenceToAddress",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadReferenceStackVariableReferenceToAddress);

  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByBoolKey,
                         "loadBoolTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByByteKey,
                         "loadBoolTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressBySDWORDKey,
                         "loadBoolTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByUDWORDKey,
                         "loadBoolTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressBySQWORDKey,
                         "loadBoolTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByUQWORDKey,
                         "loadBoolTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByDoubleKey,
                         "loadBoolTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByStringKey,
                         "loadBoolTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByRopeKey,
                         "loadBoolTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByIPv4AddressKey,
                         "loadBoolTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadBoolTableElementAddressByPPortKey,
                         "loadBoolTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadBoolTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadByteTableElementAddressByBoolKey,
                         "loadByteTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByByteKey,
                         "loadByteTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressBySDWORDKey,
                         "loadByteTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByUDWORDKey,
                         "loadByteTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressBySQWORDKey,
                         "loadByteTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByUQWORDKey,
                         "loadByteTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByDoubleKey,
                         "loadByteTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByStringKey,
                         "loadByteTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByRopeKey,
                         "loadByteTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByIPv4AddressKey,
                         "loadByteTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadByteTableElementAddressByPPortKey,
                         "loadByteTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadByteTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByBoolKey,
                         "loadSDWORDTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByByteKey,
                         "loadSDWORDTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressBySDWORDKey,
                         "loadSDWORDTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByUDWORDKey,
                         "loadSDWORDTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressBySQWORDKey,
                         "loadSDWORDTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByUQWORDKey,
                         "loadSDWORDTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByDoubleKey,
                         "loadSDWORDTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByStringKey,
                         "loadSDWORDTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByRopeKey,
                         "loadSDWORDTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByIPv4AddressKey,
                         "loadSDWORDTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadSDWORDTableElementAddressByPPortKey,
                         "loadSDWORDTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSDWORDTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByBoolKey,
                         "loadUDWORDTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByByteKey,
                         "loadUDWORDTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressBySDWORDKey,
                         "loadUDWORDTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByUDWORDKey,
                         "loadUDWORDTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressBySQWORDKey,
                         "loadUDWORDTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByUQWORDKey,
                         "loadUDWORDTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByDoubleKey,
                         "loadUDWORDTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByStringKey,
                         "loadUDWORDTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByRopeKey,
                         "loadUDWORDTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByIPv4AddressKey,
                         "loadUDWORDTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadUDWORDTableElementAddressByPPortKey,
                         "loadUDWORDTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUDWORDTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByBoolKey,
                         "loadSQWORDTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByByteKey,
                         "loadSQWORDTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressBySDWORDKey,
                         "loadSQWORDTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByUDWORDKey,
                         "loadSQWORDTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressBySQWORDKey,
                         "loadSQWORDTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByUQWORDKey,
                         "loadSQWORDTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByDoubleKey,
                         "loadSQWORDTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByStringKey,
                         "loadSQWORDTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByRopeKey,
                         "loadSQWORDTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByIPv4AddressKey,
                         "loadSQWORDTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadSQWORDTableElementAddressByPPortKey,
                         "loadSQWORDTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadSQWORDTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByBoolKey,
                         "loadUQWORDTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByByteKey,
                         "loadUQWORDTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressBySDWORDKey,
                         "loadUQWORDTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByUDWORDKey,
                         "loadUQWORDTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressBySQWORDKey,
                         "loadUQWORDTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByUQWORDKey,
                         "loadUQWORDTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByDoubleKey,
                         "loadUQWORDTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByStringKey,
                         "loadUQWORDTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByRopeKey,
                         "loadUQWORDTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByIPv4AddressKey,
                         "loadUQWORDTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadUQWORDTableElementAddressByPPortKey,
                         "loadUQWORDTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadUQWORDTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByBoolKey,
                         "loadDoubleTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByByteKey,
                         "loadDoubleTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressBySDWORDKey,
                         "loadDoubleTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByUDWORDKey,
                         "loadDoubleTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressBySQWORDKey,
                         "loadDoubleTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByUQWORDKey,
                         "loadDoubleTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByDoubleKey,
                         "loadDoubleTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByStringKey,
                         "loadDoubleTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByRopeKey,
                         "loadDoubleTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByIPv4AddressKey,
                         "loadDoubleTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadDoubleTableElementAddressByPPortKey,
                         "loadDoubleTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadDoubleTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadStringTableElementAddressByBoolKey,
                         "loadStringTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByByteKey,
                         "loadStringTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressBySDWORDKey,
                         "loadStringTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByUDWORDKey,
                         "loadStringTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressBySQWORDKey,
                         "loadStringTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByUQWORDKey,
                         "loadStringTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByDoubleKey,
                         "loadStringTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByStringKey,
                         "loadStringTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByRopeKey,
                         "loadStringTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByIPv4AddressKey,
                         "loadStringTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadStringTableElementAddressByPPortKey,
                         "loadStringTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadStringTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByBoolKey,
                         "loadRopeTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByByteKey,
                         "loadRopeTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressBySDWORDKey,
                         "loadRopeTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByUDWORDKey,
                         "loadRopeTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressBySQWORDKey,
                         "loadRopeTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByUQWORDKey,
                         "loadRopeTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByDoubleKey,
                         "loadRopeTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByStringKey,
                         "loadRopeTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByRopeKey,
                         "loadRopeTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByIPv4AddressKey,
                         "loadRopeTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadRopeTableElementAddressByPPortKey,
                         "loadRopeTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadRopeTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByBoolKey,
                         "loadIPv4AddressTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByByteKey,
                         "loadIPv4AddressTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressBySDWORDKey,
                         "loadIPv4AddressTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByUDWORDKey,
                         "loadIPv4AddressTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressBySQWORDKey,
                         "loadIPv4AddressTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByUQWORDKey,
                         "loadIPv4AddressTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByDoubleKey,
                         "loadIPv4AddressTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByStringKey,
                         "loadIPv4AddressTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByRopeKey,
                         "loadIPv4AddressTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByIPv4AddressKey,
                         "loadIPv4AddressTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadIPv4AddressTableElementAddressByPPortKey,
                         "loadIPv4AddressTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressTableElementAddressByPPortKey);

  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByBoolKey,
                         "loadPPortTableElementAddressByBoolKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByBoolKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByByteKey,
                         "loadPPortTableElementAddressByByteKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByByteKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressBySDWORDKey,
                         "loadPPortTableElementAddressBySDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressBySDWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByUDWORDKey,
                         "loadPPortTableElementAddressByUDWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByUDWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressBySQWORDKey,
                         "loadPPortTableElementAddressBySQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressBySQWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByUQWORDKey,
                         "loadPPortTableElementAddressByUQWORDKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByUQWORDKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByDoubleKey,
                         "loadPPortTableElementAddressByDoubleKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByDoubleKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByStringKey,
                         "loadPPortTableElementAddressByStringKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByStringKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByRopeKey,
                         "loadPPortTableElementAddressByRopeKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByRopeKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByIPv4AddressKey,
                         "loadPPortTableElementAddressByIPv4AddressKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByIPv4AddressKey);
  AppendInstructionEntry(ZVM_loadPPortTableElementAddressByPPortKey,
                         "loadPPortTableElementAddressByPPortKey",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_loadPPortTableElementAddressByPPortKey);

  /* 2001/7/17: Discarded
  AppendInstructionEntry(ZVM_convertStringValueToAddress,
                         "convertStringValueToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_convertStringValueToAddress);
  AppendInstructionEntry(ZVM_convertRopeValueToAddress,
                         "convertRopeValueToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_convertRopeValueToAddress);
  AppendInstructionEntry(ZVM_convertIPv4AddressValueToAddress,
                         "convertIPv4AddressValueToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_convertIPv4AddressValueToAddress);
  AppendInstructionEntry(ZVM_convertPPortValueToAddress,
                         "convertPPortValueToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_convertPPortValueToAddress);
  AppendInstructionEntry(ZVM_convertTableValueToAddress,
                         "convertTableValueToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_convertTableValueToAddress);
  */

  // load constant value指令
  AppendInstructionEntry(ZVM_loadBoolConstantValue,
                         "loadBoolConstantValue",
                         sizeof(UCHAR),
                         OPERAND_IS_UNSIGNED_NUMBER,
                         0,
                         &zvm::CZVMVirtualThread::_loadBoolConstantValue);
  AppendInstructionEntry(ZVM_loadByteConstantValue,
                         "loadByteConstantValue",
                         sizeof(UCHAR),
                         OPERAND_IS_UNSIGNED_NUMBER,
                         0,
                         &zvm::CZVMVirtualThread::_loadByteConstantValue);
  AppendInstructionEntry(ZVM_loadSDWORDConstantValue,
                         "loadSDWORDConstantValue",
                         sizeof(SDWORD),
                         OPERAND_IS_SIGNED_NUMBER,
                         0,
                         &zvm::CZVMVirtualThread::_loadSDWORDConstantValue);
  AppendInstructionEntry(ZVM_loadUDWORDConstantValue,
                         "loadUDWORDConstantValue",
                         sizeof(UDWORD),
                         OPERAND_IS_UNSIGNED_NUMBER,
                         0,
                         &zvm::CZVMVirtualThread::_loadUDWORDConstantValue);
  AppendInstructionEntry(ZVM_loadSQWORDConstantValue,
                         "loadSQWORDConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_SQWORD,
                         &zvm::CZVMVirtualThread::_loadSQWORDConstantValue);
  AppendInstructionEntry(ZVM_loadUQWORDConstantValue,
                         "loadUQWORDConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_UQWORD,
                         &zvm::CZVMVirtualThread::_loadUQWORDConstantValue);
  AppendInstructionEntry(ZVM_loadDoubleConstantValue,
                         "loadDoubleConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_DOUBLE,
                         &zvm::CZVMVirtualThread::_loadDoubleConstantValue);
  AppendInstructionEntry(ZVM_loadStringConstantValue,
                         "loadStringConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_BINARY_STRING,
                         &zvm::CZVMVirtualThread::_loadStringConstantValue);
  AppendInstructionEntry(ZVM_loadRopeConstantValue,
                         "loadRopeConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_ROPE_STRING,
                         &zvm::CZVMVirtualThread::_loadRopeConstantValue);
  AppendInstructionEntry(ZVM_loadIPv4AddressConstantValue,
                         "loadIPv4AddressConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_IPv4ADDRESS,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressConstantValue);
  AppendInstructionEntry(ZVM_loadPPortConstantValue,
                         "loadPPortConstantValue",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_PROTOCOL_PORT,
                         &zvm::CZVMVirtualThread::_loadPPortConstantValue);

  // load constant address指令
  AppendInstructionEntry(ZVM_loadStringConstantAddress,
                         "loadStringConstantAddress",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_BINARY_STRING,
                         &zvm::CZVMVirtualThread::_loadStringConstantAddress);
  AppendInstructionEntry(ZVM_loadRopeConstantAddress,
                         "loadRopeConstantAddress",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_ROPE_STRING,
                         &zvm::CZVMVirtualThread::_loadRopeConstantAddress);
  AppendInstructionEntry(ZVM_loadIPv4AddressConstantAddress,
                         "loadIPv4AddressConstantAddress",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_IPv4ADDRESS,
                         &zvm::CZVMVirtualThread::_loadIPv4AddressConstantAddress);
  AppendInstructionEntry(ZVM_loadPPortConstantAddress,
                         "loadPPortConstantAddress",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_PROTOCOL_PORT,
                         &zvm::CZVMVirtualThread::_loadPPortConstantAddress);

  // store指令
  AppendInstructionEntry(ZVM_storeToBoolGlobalVariable,
                         "storeToBoolGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToBoolGlobalVariable);
  AppendInstructionEntry(ZVM_storeToByteGlobalVariable,
                         "storeToByteGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToByteGlobalVariable);
  AppendInstructionEntry(ZVM_storeToSDWORDGlobalVariable,
                         "storeToSDWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToSDWORDGlobalVariable);
  AppendInstructionEntry(ZVM_storeToUDWORDGlobalVariable,
                         "storeToUDWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToUDWORDGlobalVariable);
  AppendInstructionEntry(ZVM_storeToSQWORDGlobalVariable,
                         "storeToSQWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToSQWORDGlobalVariable);
  AppendInstructionEntry(ZVM_storeToUQWORDGlobalVariable,
                         "storeToUQWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToUQWORDGlobalVariable);
  AppendInstructionEntry(ZVM_storeToDoubleGlobalVariable,
                         "storeToDoubleGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToDoubleGlobalVariable);
  AppendInstructionEntry(ZVM_storeToStringGlobalVariable,
                         "storeToStringGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToStringGlobalVariable);
  AppendInstructionEntry(ZVM_storeToRopeGlobalVariable,
                         "storeToRopeGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToRopeGlobalVariable);
  AppendInstructionEntry(ZVM_storeToIPv4AddressGlobalVariable,
                         "storeToIPv4AddressGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToIPv4AddressGlobalVariable);
  AppendInstructionEntry(ZVM_storeToPPortGlobalVariable,
                         "storeToPPortGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToPPortGlobalVariable);
  AppendInstructionEntry(ZVM_storeToTableGlobalVariable,
                         "storeToTableGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToTableGlobalVariable);

  AppendInstructionEntry(ZVM_storeToBoolStackVariable,
                         "storeToBoolStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToBoolStackVariable);
  AppendInstructionEntry(ZVM_storeToByteStackVariable,
                         "storeToByteStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToByteStackVariable);
  AppendInstructionEntry(ZVM_storeToSDWORDStackVariable,
                         "storeToSDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToSDWORDStackVariable);
  AppendInstructionEntry(ZVM_storeToUDWORDStackVariable,
                         "storeToUDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToUDWORDStackVariable);
  AppendInstructionEntry(ZVM_storeToSQWORDStackVariable,
                         "storeToSQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToSQWORDStackVariable);
  AppendInstructionEntry(ZVM_storeToUQWORDStackVariable,
                         "storeToUQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToUQWORDStackVariable);
  AppendInstructionEntry(ZVM_storeToDoubleStackVariable,
                         "storeToDoubleStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToDoubleStackVariable);
  AppendInstructionEntry(ZVM_storeToStringStackVariable,
                         "storeToStringStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToStringStackVariable);
  AppendInstructionEntry(ZVM_storeToRopeStackVariable,
                         "storeToRopeStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToRopeStackVariable);
  AppendInstructionEntry(ZVM_storeToIPv4AddressStackVariable,
                         "storeToIPv4AddressStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToIPv4AddressStackVariable);
  AppendInstructionEntry(ZVM_storeToPPortStackVariable,
                         "storeToPPortStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToPPortStackVariable);
  AppendInstructionEntry(ZVM_storeToTableStackVariable,
                         "storeToTableStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeToTableStackVariable);

  AppendInstructionEntry(ZVM_indirectStoreToBoolStackVariable,
                         "indirectStoreToBoolStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToBoolStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToByteStackVariable,
                         "indirectStoreToByteStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToByteStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToSDWORDStackVariable,
                         "indirectStoreToSDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToSDWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToUDWORDStackVariable,
                         "indirectStoreToUDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToUDWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToSQWORDStackVariable,
                         "indirectStoreToSQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToSQWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToUQWORDStackVariable,
                         "indirectStoreToUQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToUQWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToDoubleStackVariable,
                         "indirectStoreToDoubleStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToDoubleStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToStringStackVariable,
                         "indirectStoreToStringStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToStringStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToRopeStackVariable,
                         "indirectStoreToRopeStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToRopeStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToIPv4AddressStackVariable,
                         "indirectStoreToIPv4AddressStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToIPv4AddressStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToPPortStackVariable,
                         "indirectStoreToPPortStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToPPortStackVariable);
  AppendInstructionEntry(ZVM_indirectStoreToTableStackVariable,
                         "indirectStoreToTableStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectStoreToTableStackVariable);

  AppendInstructionEntry(ZVM_storeBoolToAddress,
                         "storeBoolToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeBoolToAddress);
  AppendInstructionEntry(ZVM_storeByteToAddress,
                         "storeByteToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeByteToAddress);
  AppendInstructionEntry(ZVM_storeSDWORDToAddress,
                         "storeSDWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeSDWORDToAddress);
  AppendInstructionEntry(ZVM_storeUDWORDToAddress,
                         "storeUDWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeUDWORDToAddress);
  AppendInstructionEntry(ZVM_storeSQWORDToAddress,
                         "storeSQWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeSQWORDToAddress);
  AppendInstructionEntry(ZVM_storeUQWORDToAddress,
                         "storeUQWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeUQWORDToAddress);
  AppendInstructionEntry(ZVM_storeDoubleToAddress,
                         "storeDoubleToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeDoubleToAddress);
  AppendInstructionEntry(ZVM_storeStringToAddress,
                         "storeStringToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeStringToAddress);
  AppendInstructionEntry(ZVM_storeRopeToAddress,
                         "storeRopeToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeRopeToAddress);
  AppendInstructionEntry(ZVM_storeIPv4AddressToAddress,
                         "storeIPv4AddressToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storeIPv4AddressToAddress);
  AppendInstructionEntry(ZVM_storePPortToAddress,
                         "storePPortToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_storePPortToAddress);

  AppendInstructionEntry(ZVM_assignReferenceAddressToBoolReferenceStackVariable,
                         "assignReferenceAddressToBoolReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToBoolReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToByteReferenceStackVariable,
                         "assignReferenceAddressToByteReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToByteReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToSDWORDReferenceStackVariable,
                         "assignReferenceAddressToSDWORDReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToSDWORDReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToUDWORDReferenceStackVariable,
                         "assignReferenceAddressToUDWORDReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToUDWORDReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToSQWORDReferenceStackVariable,
                         "assignReferenceAddressToSQWORDReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToSQWORDReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToUQWORDReferenceStackVariable,
                         "assignReferenceAddressToUQWORDReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToUQWORDReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToDoubleReferenceStackVariable,
                         "assignReferenceAddressToDoubleReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToDoubleReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToStringReferenceStackVariable,
                         "assignReferenceAddressToStringReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToStringReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToRopeReferenceStackVariable,
                         "assignReferenceAddressToRopeReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToRopeReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToIPv4AddressReferenceStackVariable,
                         "assignReferenceAddressToIPv4AddressReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToIPv4AddressReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToPPortReferenceStackVariable,
                         "assignReferenceAddressToPPortReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToPPortReferenceStackVariable);
  AppendInstructionEntry(ZVM_assignReferenceAddressToTableReferenceStackVariable,
                         "assignReferenceAddressToTableReferenceStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_assignReferenceAddressToTableReferenceStackVariable);

  // nested store指令
  AppendInstructionEntry(ZVM_nestedStoreToBoolGlobalVariable,
                         "nestedStoreToBoolGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToBoolGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToByteGlobalVariable,
                         "nestedStoreToByteGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToByteGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToSDWORDGlobalVariable,
                         "nestedStoreToSDWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToSDWORDGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToUDWORDGlobalVariable,
                         "nestedStoreToUDWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToUDWORDGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToSQWORDGlobalVariable,
                         "nestedStoreToSQWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToSQWORDGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToUQWORDGlobalVariable,
                         "nestedStoreToUQWORDGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToUQWORDGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToDoubleGlobalVariable,
                         "nestedStoreToDoubleGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToDoubleGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToStringGlobalVariable,
                         "nestedStoreToStringGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToStringGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToRopeGlobalVariable,
                         "nestedStoreToRopeGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToRopeGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToIPv4AddressGlobalVariable,
                         "nestedStoreToIPv4AddressGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToIPv4AddressGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToPPortGlobalVariable,
                         "nestedStoreToPPortGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToPPortGlobalVariable);
  AppendInstructionEntry(ZVM_nestedStoreToTableGlobalVariable,
                         "nestedStoreToTableGlobalVariable",
                         __GLOBAL_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToTableGlobalVariable);

  AppendInstructionEntry(ZVM_nestedStoreToBoolStackVariable,
                         "nestedStoreToBoolStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToBoolStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToByteStackVariable,
                         "nestedStoreToByteStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToByteStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToSDWORDStackVariable,
                         "nestedStoreToSDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToSDWORDStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToUDWORDStackVariable,
                         "nestedStoreToUDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToUDWORDStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToSQWORDStackVariable,
                         "nestedStoreToSQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToSQWORDStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToUQWORDStackVariable,
                         "nestedStoreToUQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToUQWORDStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToDoubleStackVariable,
                         "nestedStoreToDoubleStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToDoubleStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToStringStackVariable,
                         "nestedStoreToStringStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToStringStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToRopeStackVariable,
                         "nestedStoreToRopeStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToRopeStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToIPv4AddressStackVariable,
                         "nestedStoreToIPv4AddressStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToIPv4AddressStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToPPortStackVariable,
                         "nestedStoreToPPortStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToPPortStackVariable);
  AppendInstructionEntry(ZVM_nestedStoreToTableStackVariable,
                         "nestedStoreToTableStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreToTableStackVariable);

  AppendInstructionEntry(ZVM_indirectNestedStoreToBoolStackVariable,
                         "indirectNestedStoreToBoolStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToBoolStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToByteStackVariable,
                         "indirectNestedStoreToByteStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToByteStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToSDWORDStackVariable,
                         "indirectNestedStoreToSDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToSDWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToUDWORDStackVariable,
                         "indirectNestedStoreToUDWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToUDWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToSQWORDStackVariable,
                         "indirectNestedStoreToSQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToSQWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToUQWORDStackVariable,
                         "indirectNestedStoreToUQWORDStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToUQWORDStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToDoubleStackVariable,
                         "indirectNestedStoreToDoubleStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToDoubleStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToStringStackVariable,
                         "indirectNestedStoreToStringStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToStringStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToRopeStackVariable,
                         "indirectNestedStoreToRopeStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToRopeStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToIPv4AddressStackVariable,
                         "indirectNestedStoreToIPv4AddressStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToIPv4AddressStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToPPortStackVariable,
                         "indirectNestedStoreToPPortStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToPPortStackVariable);
  AppendInstructionEntry(ZVM_indirectNestedStoreToTableStackVariable,
                         "indirectNestedStoreToTableStackVariable",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_indirectNestedStoreToTableStackVariable);

  AppendInstructionEntry(ZVM_nestedStoreBoolToAddress,
                         "nestedStoreBoolToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreBoolToAddress);
  AppendInstructionEntry(ZVM_nestedStoreByteToAddress,
                         "nestedStoreByteToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreByteToAddress);
  AppendInstructionEntry(ZVM_nestedStoreSDWORDToAddress,
                         "nestedStoreSDWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreSDWORDToAddress);
  AppendInstructionEntry(ZVM_nestedStoreUDWORDToAddress,
                         "nestedStoreUDWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreUDWORDToAddress);
  AppendInstructionEntry(ZVM_nestedStoreSQWORDToAddress,
                         "nestedStoreSQWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreSQWORDToAddress);
  AppendInstructionEntry(ZVM_nestedStoreUQWORDToAddress,
                         "nestedStoreUQWORDToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreUQWORDToAddress);
  AppendInstructionEntry(ZVM_nestedStoreDoubleToAddress,
                         "nestedStoreDoubleToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreDoubleToAddress);
  AppendInstructionEntry(ZVM_nestedStoreStringToAddress,
                         "nestedStoreStringToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreStringToAddress);
  AppendInstructionEntry(ZVM_nestedStoreRopeToAddress,
                         "nestedStoreRopeToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreRopeToAddress);
  AppendInstructionEntry(ZVM_nestedStoreIPv4AddressToAddress,
                         "nestedStoreIPv4AddressToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStoreIPv4AddressToAddress);
  AppendInstructionEntry(ZVM_nestedStorePPortToAddress,
                         "nestedStorePPortToAddress",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_nestedStorePPortToAddress);

  // 二元指令
  AppendInstructionEntry(ZVM_boolLogicOr,
                         "boolLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolLogicOr);
  AppendInstructionEntry(ZVM_byteLogicOr,
                         "byteLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteLogicOr);
  AppendInstructionEntry(ZVM_sdwordLogicOr,
                         "sdwordLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordLogicOr);
  AppendInstructionEntry(ZVM_udwordLogicOr,
                         "udwordLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordLogicOr);
  AppendInstructionEntry(ZVM_sqwordLogicOr,
                         "sqwordLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordLogicOr);
  AppendInstructionEntry(ZVM_uqwordLogicOr,
                         "uqwordLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordLogicOr);
  AppendInstructionEntry(ZVM_doubleLogicOr,
                         "doubleLogicOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleLogicOr);

  AppendInstructionEntry(ZVM_boolLogicAnd,
                         "boolLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolLogicAnd);
  AppendInstructionEntry(ZVM_byteLogicAnd,
                         "byteLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteLogicAnd);
  AppendInstructionEntry(ZVM_sdwordLogicAnd,
                         "sdwordLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordLogicAnd);
  AppendInstructionEntry(ZVM_udwordLogicAnd,
                         "udwordLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordLogicAnd);
  AppendInstructionEntry(ZVM_sqwordLogicAnd,
                         "sqwordLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordLogicAnd);
  AppendInstructionEntry(ZVM_uqwordLogicAnd,
                         "uqwordLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordLogicAnd);
  AppendInstructionEntry(ZVM_doubleLogicAnd,
                         "doubleLogicAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleLogicAnd);

  AppendInstructionEntry(ZVM_byteBitOr,
                         "byteBitOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteBitOr);
  AppendInstructionEntry(ZVM_sdwordBitOr,
                         "sdwordBitOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordBitOr);
  AppendInstructionEntry(ZVM_udwordBitOr,
                         "udwordBitOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordBitOr);
  AppendInstructionEntry(ZVM_sqwordBitOr,
                         "sqwordBitOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordBitOr);
  AppendInstructionEntry(ZVM_uqwordBitOr,
                         "uqwordBitOr",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordBitOr);

  AppendInstructionEntry(ZVM_byteBitXor,
                         "byteBitXor",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteBitXor);
  AppendInstructionEntry(ZVM_sdwordBitXor,
                         "sdwordBitXor",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordBitXor);
  AppendInstructionEntry(ZVM_udwordBitXor,
                         "udwordBitXor",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordBitXor);
  AppendInstructionEntry(ZVM_sqwordBitXor,
                         "sqwordBitXor",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordBitXor);
  AppendInstructionEntry(ZVM_uqwordBitXor,
                         "uqwordBitXor",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordBitXor);

  AppendInstructionEntry(ZVM_byteBitAnd,
                         "byteBitAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteBitAnd);
  AppendInstructionEntry(ZVM_sdwordBitAnd,
                         "sdwordBitAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordBitAnd);
  AppendInstructionEntry(ZVM_udwordBitAnd,
                         "udwordBitAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordBitAnd);
  AppendInstructionEntry(ZVM_sqwordBitAnd,
                         "sqwordBitAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordBitAnd);
  AppendInstructionEntry(ZVM_uqwordBitAnd,
                         "uqwordBitAnd",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordBitAnd);

  AppendInstructionEntry(ZVM_boolNotEqual,
                         "boolNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolNotEqual);
  AppendInstructionEntry(ZVM_byteNotEqual,
                         "byteNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteNotEqual);
  AppendInstructionEntry(ZVM_sdwordNotEqual,
                         "sdwordNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordNotEqual);
  AppendInstructionEntry(ZVM_udwordNotEqual,
                         "udwordNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordNotEqual);
  AppendInstructionEntry(ZVM_sqwordNotEqual,
                         "sqwordNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordNotEqual);
  AppendInstructionEntry(ZVM_uqwordNotEqual,
                         "uqwordNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordNotEqual);
  AppendInstructionEntry(ZVM_doubleNotEqual,
                         "doubleNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleNotEqual);
  AppendInstructionEntry(ZVM_stringNotEqual,
                         "stringNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringNotEqual);
  AppendInstructionEntry(ZVM_ropeNotEqual,
                         "ropeNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeNotEqual);
  AppendInstructionEntry(ZVM_ipv4addressNotEqual,
                         "ipv4addressNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ipv4addressNotEqual);
  AppendInstructionEntry(ZVM_pportNotEqual,
                         "pportNotEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportNotEqual);

  AppendInstructionEntry(ZVM_boolEqual,
                         "boolEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolEqual);
  AppendInstructionEntry(ZVM_byteEqual,
                         "byteEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteEqual);
  AppendInstructionEntry(ZVM_sdwordEqual,
                         "sdwordEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordEqual);
  AppendInstructionEntry(ZVM_udwordEqual,
                         "udwordEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordEqual);
  AppendInstructionEntry(ZVM_sqwordEqual,
                         "sqwordEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordEqual);
  AppendInstructionEntry(ZVM_uqwordEqual,
                         "uqwordEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordEqual);
  AppendInstructionEntry(ZVM_doubleEqual,
                         "doubleEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleEqual);
  AppendInstructionEntry(ZVM_stringEqual,
                         "stringEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringEqual);
  AppendInstructionEntry(ZVM_ropeEqual,
                         "ropeEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeEqual);
  AppendInstructionEntry(ZVM_ipv4addressEqual,
                         "ipv4addressEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ipv4addressEqual);
  AppendInstructionEntry(ZVM_pportEqual,
                         "pportEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportEqual);

  AppendInstructionEntry(ZVM_byteLess,
                         "byteLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteLess);
  AppendInstructionEntry(ZVM_sdwordLess,
                         "sdwordLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordLess);
  AppendInstructionEntry(ZVM_udwordLess,
                         "udwordLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordLess);
  AppendInstructionEntry(ZVM_sqwordLess,
                         "sqwordLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordLess);
  AppendInstructionEntry(ZVM_uqwordLess,
                         "uqwordLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordLess);
  AppendInstructionEntry(ZVM_doubleLess,
                         "doubleLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleLess);
  AppendInstructionEntry(ZVM_stringLess,
                         "stringLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringLess);
  AppendInstructionEntry(ZVM_ropeLess,
                         "ropeLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeLess);
  AppendInstructionEntry(ZVM_pportLess,
                         "pportLess",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportLess);

  AppendInstructionEntry(ZVM_byteGreat,
                         "byteGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteGreat);
  AppendInstructionEntry(ZVM_sdwordGreat,
                         "sdwordGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordGreat);
  AppendInstructionEntry(ZVM_udwordGreat,
                         "udwordGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordGreat);
  AppendInstructionEntry(ZVM_sqwordGreat,
                         "sqwordGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordGreat);
  AppendInstructionEntry(ZVM_uqwordGreat,
                         "uqwordGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordGreat);
  AppendInstructionEntry(ZVM_doubleGreat,
                         "doubleGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleGreat);
  AppendInstructionEntry(ZVM_stringGreat,
                         "stringGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringGreat);
  AppendInstructionEntry(ZVM_ropeGreat,
                         "ropeGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeGreat);
  AppendInstructionEntry(ZVM_pportGreat,
                         "pportGreat",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportGreat);

  AppendInstructionEntry(ZVM_byteLessEqual,
                         "byteLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteLessEqual);
  AppendInstructionEntry(ZVM_sdwordLessEqual,
                         "sdwordLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordLessEqual);
  AppendInstructionEntry(ZVM_udwordLessEqual,
                         "udwordLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordLessEqual);
  AppendInstructionEntry(ZVM_sqwordLessEqual,
                         "sqwordLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordLessEqual);
  AppendInstructionEntry(ZVM_uqwordLessEqual,
                         "uqwordLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordLessEqual);
  AppendInstructionEntry(ZVM_doubleLessEqual,
                         "doubleLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleLessEqual);
  AppendInstructionEntry(ZVM_stringLessEqual,
                         "stringLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringLessEqual);
  AppendInstructionEntry(ZVM_ropeLessEqual,
                         "ropeLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeLessEqual);
  AppendInstructionEntry(ZVM_pportLessEqual,
                         "pportLessEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportLessEqual);

  AppendInstructionEntry(ZVM_byteGreatEqual,
                         "byteGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteGreatEqual);
  AppendInstructionEntry(ZVM_sdwordGreatEqual,
                         "sdwordGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordGreatEqual);
  AppendInstructionEntry(ZVM_udwordGreatEqual,
                         "udwordGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordGreatEqual);
  AppendInstructionEntry(ZVM_sqwordGreatEqual,
                         "sqwordGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordGreatEqual);
  AppendInstructionEntry(ZVM_uqwordGreatEqual,
                         "uqwordGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordGreatEqual);
  AppendInstructionEntry(ZVM_doubleGreatEqual,
                         "doubleGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleGreatEqual);
  AppendInstructionEntry(ZVM_stringGreatEqual,
                         "stringGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringGreatEqual);
  AppendInstructionEntry(ZVM_ropeGreatEqual,
                         "ropeGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeGreatEqual);
  AppendInstructionEntry(ZVM_pportGreatEqual,
                         "pportGreatEqual",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportGreatEqual);

  AppendInstructionEntry(ZVM_byteShiftLeft,
                         "byteShiftLeft",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteShiftLeft);
  AppendInstructionEntry(ZVM_sdwordShiftLeft,
                         "sdwordShiftLeft",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordShiftLeft);
  AppendInstructionEntry(ZVM_udwordShiftLeft,
                         "udwordShiftLeft",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordShiftLeft);
  AppendInstructionEntry(ZVM_sqwordShiftLeft,
                         "sqwordShiftLeft",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordShiftLeft);
  AppendInstructionEntry(ZVM_uqwordShiftLeft,
                         "uqwordShiftLeft",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordShiftLeft);

  AppendInstructionEntry(ZVM_byteShiftRight,
                         "byteShiftRight",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteShiftRight);
  AppendInstructionEntry(ZVM_sdwordShiftRight,
                         "sdwordShiftRight",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordShiftRight);
  AppendInstructionEntry(ZVM_udwordShiftRight,
                         "udwordShiftRight",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordShiftRight);
  AppendInstructionEntry(ZVM_sqwordShiftRight,
                         "sqwordShiftRight",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordShiftRight);
  AppendInstructionEntry(ZVM_uqwordShiftRight,
                         "uqwordShiftRight",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordShiftRight);

  AppendInstructionEntry(ZVM_bytePlus,
                         "bytePlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_bytePlus);
  AppendInstructionEntry(ZVM_sdwordPlus,
                         "sdwordPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordPlus);
  AppendInstructionEntry(ZVM_udwordPlus,
                         "udwordPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordPlus);
  AppendInstructionEntry(ZVM_sqwordPlus,
                         "sqwordPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordPlus);
  AppendInstructionEntry(ZVM_uqwordPlus,
                         "uqwordPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordPlus);
  AppendInstructionEntry(ZVM_doublePlus,
                         "doublePlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doublePlus);
  AppendInstructionEntry(ZVM_stringPlus,
                         "stringPlus",
                         __STACK_VARIABLE_INSTRUCTION__,
                         // 2001/7/17: __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringPlus);
  AppendInstructionEntry(ZVM_ropePlus,
                         "ropePlus",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropePlus);

  AppendInstructionEntry(ZVM_byteMinus,
                         "byteMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteMinus);
  AppendInstructionEntry(ZVM_sdwordMinus,
                         "sdwordMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordMinus);
  AppendInstructionEntry(ZVM_udwordMinus,
                         "udwordMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordMinus);
  AppendInstructionEntry(ZVM_sqwordMinus,
                         "sqwordMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordMinus);
  AppendInstructionEntry(ZVM_uqwordMinus,
                         "uqwordMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordMinus);
  AppendInstructionEntry(ZVM_doubleMinus,
                         "doubleMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleMinus);

  AppendInstructionEntry(ZVM_byteMulti,
                         "byteMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteMulti);
  AppendInstructionEntry(ZVM_sdwordMulti,
                         "sdwordMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordMulti);
  AppendInstructionEntry(ZVM_udwordMulti,
                         "udwordMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordMulti);
  AppendInstructionEntry(ZVM_sqwordMulti,
                         "sqwordMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordMulti);
  AppendInstructionEntry(ZVM_uqwordMulti,
                         "uqwordMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordMulti);
  AppendInstructionEntry(ZVM_doubleMulti,
                         "doubleMulti",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleMulti);

  AppendInstructionEntry(ZVM_byteDiv,
                         "byteDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteDiv);
  AppendInstructionEntry(ZVM_sdwordDiv,
                         "sdwordDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordDiv);
  AppendInstructionEntry(ZVM_udwordDiv,
                         "udwordDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordDiv);
  AppendInstructionEntry(ZVM_sqwordDiv,
                         "sqwordDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordDiv);
  AppendInstructionEntry(ZVM_uqwordDiv,
                         "uqwordDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordDiv);
  AppendInstructionEntry(ZVM_doubleDiv,
                         "doubleDiv",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleDiv);

  AppendInstructionEntry(ZVM_byteMod,
                         "byteMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteMod);
  AppendInstructionEntry(ZVM_sdwordMod,
                         "sdwordMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordMod);
  AppendInstructionEntry(ZVM_udwordMod,
                         "udwordMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordMod);
  AppendInstructionEntry(ZVM_sqwordMod,
                         "sqwordMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordMod);
  AppendInstructionEntry(ZVM_uqwordMod,
                         "uqwordMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordMod);
  /* C/C++不允许"double % double"
  AppendInstructionEntry(ZVM_doubleMod,
                         "doubleMod",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleMod);
  */

  // 一元指令
  AppendInstructionEntry(ZVM_bytePrefixInc,
                         "bytePrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_bytePrefixInc);
  AppendInstructionEntry(ZVM_sdwordPrefixInc,
                         "sdwordPrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordPrefixInc);
  AppendInstructionEntry(ZVM_udwordPrefixInc,
                         "udwordPrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordPrefixInc);
  AppendInstructionEntry(ZVM_sqwordPrefixInc,
                         "sqwordPrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordPrefixInc);
  AppendInstructionEntry(ZVM_uqwordPrefixInc,
                         "uqwordPrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordPrefixInc);
  AppendInstructionEntry(ZVM_doublePrefixInc,
                         "doublePrefixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doublePrefixInc);

  AppendInstructionEntry(ZVM_bytePrefixDec,
                         "bytePrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_bytePrefixDec);
  AppendInstructionEntry(ZVM_sdwordPrefixDec,
                         "sdwordPrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordPrefixDec);
  AppendInstructionEntry(ZVM_udwordPrefixDec,
                         "udwordPrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordPrefixDec);
  AppendInstructionEntry(ZVM_sqwordPrefixDec,
                         "sqwordPrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordPrefixDec);
  AppendInstructionEntry(ZVM_uqwordPrefixDec,
                         "uqwordPrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordPrefixDec);
  AppendInstructionEntry(ZVM_doublePrefixDec,
                         "doublePrefixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doublePrefixDec);

  AppendInstructionEntry(ZVM_bytePostfixInc,
                         "bytePostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_bytePostfixInc);
  AppendInstructionEntry(ZVM_sdwordPostfixInc,
                         "sdwordPostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordPostfixInc);
  AppendInstructionEntry(ZVM_udwordPostfixInc,
                         "udwordPostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordPostfixInc);
  AppendInstructionEntry(ZVM_sqwordPostfixInc,
                         "sqwordPostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordPostfixInc);
  AppendInstructionEntry(ZVM_uqwordPostfixInc,
                         "uqwordPostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordPostfixInc);
  AppendInstructionEntry(ZVM_doublePostfixInc,
                         "doublePostfixInc",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doublePostfixInc);

  AppendInstructionEntry(ZVM_bytePostfixDec,
                         "bytePostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_bytePostfixDec);
  AppendInstructionEntry(ZVM_sdwordPostfixDec,
                         "sdwordPostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordPostfixDec);
  AppendInstructionEntry(ZVM_udwordPostfixDec,
                         "udwordPostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordPostfixDec);
  AppendInstructionEntry(ZVM_sqwordPostfixDec,
                         "sqwordPostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordPostfixDec);
  AppendInstructionEntry(ZVM_uqwordPostfixDec,
                         "uqwordPostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordPostfixDec);
  AppendInstructionEntry(ZVM_doublePostfixDec,
                         "doublePostfixDec",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doublePostfixDec);

  AppendInstructionEntry(ZVM_byteUnaryPlus,
                         "byteUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteUnaryPlus);
  AppendInstructionEntry(ZVM_sdwordUnaryPlus,
                         "sdwordUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordUnaryPlus);
  AppendInstructionEntry(ZVM_udwordUnaryPlus,
                         "udwordUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordUnaryPlus);
  AppendInstructionEntry(ZVM_sqwordUnaryPlus,
                         "sqwordUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordUnaryPlus);
  AppendInstructionEntry(ZVM_uqwordUnaryPlus,
                         "uqwordUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordUnaryPlus);
  AppendInstructionEntry(ZVM_doubleUnaryPlus,
                         "doubleUnaryPlus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleUnaryPlus);

  AppendInstructionEntry(ZVM_byteUnaryMinus,
                         "byteUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteUnaryMinus);
  AppendInstructionEntry(ZVM_sdwordUnaryMinus,
                         "sdwordUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordUnaryMinus);
  AppendInstructionEntry(ZVM_udwordUnaryMinus,
                         "udwordUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordUnaryMinus);
  AppendInstructionEntry(ZVM_sqwordUnaryMinus,
                         "sqwordUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordUnaryMinus);
  AppendInstructionEntry(ZVM_uqwordUnaryMinus,
                         "uqwordUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordUnaryMinus);
  AppendInstructionEntry(ZVM_doubleUnaryMinus,
                         "doubleUnaryMinus",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleUnaryMinus);

  AppendInstructionEntry(ZVM_byteBitNot,
                         "byteBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteBitNot);
  AppendInstructionEntry(ZVM_sdwordBitNot,
                         "sdwordBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordBitNot);
  AppendInstructionEntry(ZVM_udwordBitNot,
                         "udwordBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordBitNot);
  AppendInstructionEntry(ZVM_sqwordBitNot,
                         "sqwordBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordBitNot);
  AppendInstructionEntry(ZVM_uqwordBitNot,
                         "uqwordBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordBitNot);
  /* C/C++不允许"~double"
  AppendInstructionEntry(ZVM_doubleBitNot,
                         "doubleBitNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleBitNot);
  */

  AppendInstructionEntry(ZVM_boolLogicNot,
                         "boolLogicNot",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolLogicNot);

  // cast指令
  AppendInstructionEntry(ZVM_boolToByte,
                         "boolToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolToByte);
  AppendInstructionEntry(ZVM_boolToSDWORD,
                         "boolToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolToSDWORD);
  AppendInstructionEntry(ZVM_boolToUDWORD,
                         "boolToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolToUDWORD);
  AppendInstructionEntry(ZVM_boolToSQWORD,
                         "boolToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolToSQWORD);
  AppendInstructionEntry(ZVM_boolToUQWORD,
                         "boolToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolToUQWORD);

  AppendInstructionEntry(ZVM_byteToBool,
                         "byteToBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToBool);
  AppendInstructionEntry(ZVM_byteToSDWORD,
                         "byteToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToSDWORD);
  AppendInstructionEntry(ZVM_byteToUDWORD,
                         "byteToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToUDWORD);
  AppendInstructionEntry(ZVM_byteToSQWORD,
                         "byteToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToSQWORD);
  AppendInstructionEntry(ZVM_byteToUQWORD,
                         "byteToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToUQWORD);
  AppendInstructionEntry(ZVM_byteToDouble,
                         "byteToDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteToDouble);

  AppendInstructionEntry(ZVM_sdwordToBool,
                         "sdwordToBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToBool);
  AppendInstructionEntry(ZVM_sdwordToByte,
                         "sdwordToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToByte);
  AppendInstructionEntry(ZVM_sdwordToUDWORD,
                         "sdwordToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToUDWORD);
  AppendInstructionEntry(ZVM_sdwordToSQWORD,
                         "sdwordToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToSQWORD);
  AppendInstructionEntry(ZVM_sdwordToUQWORD,
                         "sdwordToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToUQWORD);
  AppendInstructionEntry(ZVM_sdwordToDouble,
                         "sdwordToDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordToDouble);

  AppendInstructionEntry(ZVM_udwordToBool,
                         "udwordToBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToBool);
  AppendInstructionEntry(ZVM_udwordToByte,
                         "udwordToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToByte);
  AppendInstructionEntry(ZVM_udwordToSDWORD,
                         "udwordToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToSDWORD);
  AppendInstructionEntry(ZVM_udwordToSQWORD,
                         "udwordToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToSQWORD);
  AppendInstructionEntry(ZVM_udwordToUQWORD,
                         "udwordToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToUQWORD);
  AppendInstructionEntry(ZVM_udwordToDouble,
                         "udwordToDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordToDouble);

  AppendInstructionEntry(ZVM_sqwordToBool,
                         "sqwordToBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToBool);
  AppendInstructionEntry(ZVM_sqwordToByte,
                         "sqwordToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToByte);
  AppendInstructionEntry(ZVM_sqwordToSDWORD,
                         "sqwordToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToSDWORD);
  AppendInstructionEntry(ZVM_sqwordToUDWORD,
                         "sqwordToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToUDWORD);
  AppendInstructionEntry(ZVM_sqwordToUQWORD,
                         "sqwordToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToUQWORD);
  AppendInstructionEntry(ZVM_sqwordToDouble,
                         "sqwordToDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordToDouble);

  AppendInstructionEntry(ZVM_uqwordToBool,
                         "uqwordToBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToBool);
  AppendInstructionEntry(ZVM_uqwordToByte,
                         "uqwordToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToByte);
  AppendInstructionEntry(ZVM_uqwordToSDWORD,
                         "uqwordToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToSDWORD);
  AppendInstructionEntry(ZVM_uqwordToUDWORD,
                         "uqwordToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToUDWORD);
  AppendInstructionEntry(ZVM_uqwordToSQWORD,
                         "uqwordToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToSQWORD);
  AppendInstructionEntry(ZVM_uqwordToDouble,
                         "uqwordToDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordToDouble);

  AppendInstructionEntry(ZVM_doubleToByte,
                         "doubleToByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleToByte);
  AppendInstructionEntry(ZVM_doubleToSDWORD,
                         "doubleToSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleToSDWORD);
  AppendInstructionEntry(ZVM_doubleToUDWORD,
                         "doubleToUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleToUDWORD);
  AppendInstructionEntry(ZVM_doubleToSQWORD,
                         "doubleToSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleToSQWORD);
  AppendInstructionEntry(ZVM_doubleToUQWORD,
                         "doubleToUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleToUQWORD);

  // stack指令
  AppendInstructionEntry(ZVM_popAny,
                         "popAny",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popAny);
  AppendInstructionEntry(ZVM_popBool,
                         "popBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popBool);
  AppendInstructionEntry(ZVM_popByte,
                         "popByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popByte);
  AppendInstructionEntry(ZVM_popSDWORD,
                         "popSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popSDWORD);
  AppendInstructionEntry(ZVM_popUDWORD,
                         "popUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popUDWORD);
  AppendInstructionEntry(ZVM_popSQWORD,
                         "popSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popSQWORD);
  AppendInstructionEntry(ZVM_popUQWORD,
                         "popUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popUQWORD);
  AppendInstructionEntry(ZVM_popDouble,
                         "popDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popDouble);
  AppendInstructionEntry(ZVM_popString,
                         "popString",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popString);
  AppendInstructionEntry(ZVM_popRope,
                         "popRope",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popRope);
  AppendInstructionEntry(ZVM_popIPv4Address,
                         "popIPv4Address",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popIPv4Address);
  AppendInstructionEntry(ZVM_popPPort,
                         "popPPort",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popPPort);
  AppendInstructionEntry(ZVM_popTable,
                         "popTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_popTable);

  AppendInstructionEntry(ZVM_ret,
                         "ret",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ret);

  AppendInstructionEntry(ZVM_pushBP,
                         "pushBP",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pushBP);

  AppendInstructionEntry(ZVM_constructBool,
                         "constructBool",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructBool);
  AppendInstructionEntry(ZVM_constructByte,
                         "constructByte",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructByte);
  AppendInstructionEntry(ZVM_constructSDWORD,
                         "constructSDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSDWORD);
  AppendInstructionEntry(ZVM_constructUDWORD,
                         "constructUDWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUDWORD);
  AppendInstructionEntry(ZVM_constructSQWORD,
                         "constructSQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSQWORD);
  AppendInstructionEntry(ZVM_constructUQWORD,
                         "constructUQWORD",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUQWORD);
  AppendInstructionEntry(ZVM_constructDouble,
                         "constructDouble",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructDouble);
  AppendInstructionEntry(ZVM_constructString,
                         "constructString",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructString);
  AppendInstructionEntry(ZVM_constructRope,
                         "constructRope",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructRope);
  AppendInstructionEntry(ZVM_constructIPv4Address,
                         "constructIPv4Address",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructIPv4Address);
  AppendInstructionEntry(ZVM_constructPPort,
                         "constructPPort",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructPPort);

  AppendInstructionEntry(ZVM_constructBoolTable,
                         "constructBoolTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructBoolTable);
  AppendInstructionEntry(ZVM_constructByteTable,
                         "constructByteTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructByteTable);
  AppendInstructionEntry(ZVM_constructSDWORDTable,
                         "constructSDWORDTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSDWORDTable);
  AppendInstructionEntry(ZVM_constructUDWORDTable,
                         "constructUDWORDTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUDWORDTable);
  AppendInstructionEntry(ZVM_constructSQWORDTable,
                         "constructSQWORDTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSQWORDTable);
  AppendInstructionEntry(ZVM_constructUQWORDTable,
                         "constructUQWORDTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUQWORDTable);
  AppendInstructionEntry(ZVM_constructDoubleTable,
                         "constructDoubleTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructDoubleTable);
  AppendInstructionEntry(ZVM_constructStringTable,
                         "constructStringTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructStringTable);
  AppendInstructionEntry(ZVM_constructRopeTable,
                         "constructRopeTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructRopeTable);
  AppendInstructionEntry(ZVM_constructIPv4AddressTable,
                         "constructIPv4AddressTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructIPv4AddressTable);
  AppendInstructionEntry(ZVM_constructPPortTable,
                         "constructPPortTable",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructPPortTable);

  AppendInstructionEntry(ZVM_constructBoolReference,
                         "constructBoolReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructBoolReference);
  AppendInstructionEntry(ZVM_constructByteReference,
                         "constructByteReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructByteReference);
  AppendInstructionEntry(ZVM_constructSDWORDReference,
                         "constructSDWORDReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSDWORDReference);
  AppendInstructionEntry(ZVM_constructUDWORDReference,
                         "constructUDWORDReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUDWORDReference);
  AppendInstructionEntry(ZVM_constructSQWORDReference,
                         "constructSQWORDReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructSQWORDReference);
  AppendInstructionEntry(ZVM_constructUQWORDReference,
                         "constructUQWORDReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructUQWORDReference);
  AppendInstructionEntry(ZVM_constructDoubleReference,
                         "constructDoubleReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructDoubleReference);
  AppendInstructionEntry(ZVM_constructStringReference,
                         "constructStringReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructStringReference);
  AppendInstructionEntry(ZVM_constructRopeReference,
                         "constructRopeReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructRopeReference);
  AppendInstructionEntry(ZVM_constructIPv4AddressReference,
                         "constructIPv4AddressReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructIPv4AddressReference);
  AppendInstructionEntry(ZVM_constructPPortReference,
                         "constructPPortReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructPPortReference);
  AppendInstructionEntry(ZVM_constructTableReference,
                         "constructTableReference",
                         __NONE_OPERAND_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_constructTableReference);

  AppendInstructionEntry(ZVM_quickConstructStringObject,
                         "quickConstructStringObject",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_quickConstructStringObject);
  AppendInstructionEntry(ZVM_quickConstructRopeObject,
                         "quickConstructRopeObject",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_quickConstructRopeObject);
  AppendInstructionEntry(ZVM_quickConstructIPv4AddressObject,
                         "quickConstructIPv4AddressObject",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_quickConstructIPv4AddressObject);
  AppendInstructionEntry(ZVM_quickConstructPPortObject,
                         "quickConstructPPortObject",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_quickConstructPPortObject);
  AppendInstructionEntry(ZVM_quickConstructTableObject,
                         "quickConstructTableObject",
                         __STACK_VARIABLE_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_quickConstructTableObject);

  // PC转移指令
  AppendInstructionEntry(ZVM_boolFalseJump,
                         "boolFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolFalseJump);
  AppendInstructionEntry(ZVM_byteFalseJump,
                         "byteFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteFalseJump);
  AppendInstructionEntry(ZVM_sdwordFalseJump,
                         "sdwordFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordFalseJump);
  AppendInstructionEntry(ZVM_udwordFalseJump,
                         "udwordFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordFalseJump);
  AppendInstructionEntry(ZVM_sqwordFalseJump,
                         "sqwordFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordFalseJump);
  AppendInstructionEntry(ZVM_uqwordFalseJump,
                         "uqwordFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordFalseJump);
  AppendInstructionEntry(ZVM_doubleFalseJump,
                         "doubleFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleFalseJump);
  AppendInstructionEntry(ZVM_stringFalseJump,
                         "stringFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringFalseJump);
  AppendInstructionEntry(ZVM_ropeFalseJump,
                         "ropeFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeFalseJump);
  AppendInstructionEntry(ZVM_ipv4addressFalseJump,
                         "ipv4addressFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ipv4addressFalseJump);
  AppendInstructionEntry(ZVM_pportFalseJump,
                         "pportFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportFalseJump);
  AppendInstructionEntry(ZVM_tableFalseJump,
                         "tableFalseJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_tableFalseJump);

  AppendInstructionEntry(ZVM_boolFalseCircuitJump,
                         "boolFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolFalseCircuitJump);
  AppendInstructionEntry(ZVM_byteFalseCircuitJump,
                         "byteFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteFalseCircuitJump);
  AppendInstructionEntry(ZVM_sdwordFalseCircuitJump,
                         "sdwordFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordFalseCircuitJump);
  AppendInstructionEntry(ZVM_udwordFalseCircuitJump,
                         "udwordFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordFalseCircuitJump);
  AppendInstructionEntry(ZVM_sqwordFalseCircuitJump,
                         "sqwordFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordFalseCircuitJump);
  AppendInstructionEntry(ZVM_uqwordFalseCircuitJump,
                         "uqwordFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordFalseCircuitJump);
  AppendInstructionEntry(ZVM_doubleFalseCircuitJump,
                         "doubleFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleFalseCircuitJump);
  AppendInstructionEntry(ZVM_stringFalseCircuitJump,
                         "stringFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringFalseCircuitJump);
  AppendInstructionEntry(ZVM_ropeFalseCircuitJump,
                         "ropeFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeFalseCircuitJump);
  AppendInstructionEntry(ZVM_ipv4addressFalseCircuitJump,
                         "ipv4addressFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ipv4addressFalseCircuitJump);
  AppendInstructionEntry(ZVM_pportFalseCircuitJump,
                         "pportFalseCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportFalseCircuitJump);

  AppendInstructionEntry(ZVM_boolTrueCircuitJump,
                         "boolTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_boolTrueCircuitJump);
  AppendInstructionEntry(ZVM_byteTrueCircuitJump,
                         "byteTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_byteTrueCircuitJump);
  AppendInstructionEntry(ZVM_sdwordTrueCircuitJump,
                         "sdwordTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sdwordTrueCircuitJump);
  AppendInstructionEntry(ZVM_udwordTrueCircuitJump,
                         "udwordTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_udwordTrueCircuitJump);
  AppendInstructionEntry(ZVM_sqwordTrueCircuitJump,
                         "sqwordTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_sqwordTrueCircuitJump);
  AppendInstructionEntry(ZVM_uqwordTrueCircuitJump,
                         "uqwordTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_uqwordTrueCircuitJump);
  AppendInstructionEntry(ZVM_doubleTrueCircuitJump,
                         "doubleTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_doubleTrueCircuitJump);
  AppendInstructionEntry(ZVM_stringTrueCircuitJump,
                         "stringTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_stringTrueCircuitJump);
  AppendInstructionEntry(ZVM_ropeTrueCircuitJump,
                         "ropeTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ropeTrueCircuitJump);
  AppendInstructionEntry(ZVM_ipv4addressTrueCircuitJump,
                         "ipv4addressTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_ipv4addressTrueCircuitJump);
  AppendInstructionEntry(ZVM_pportTrueCircuitJump,
                         "pportTrueCircuitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_pportTrueCircuitJump);

  AppendInstructionEntry(ZVM_unlimitJump,
                         "unlimitJump",
                         __CODE_LABEL_INSTRUCTION__,
                         &zvm::CZVMVirtualThread::_unlimitJump);

  AppendInstructionEntry(ZVM_call,
                         "call",
                         sizeof(TZVMIndex),
                         OPERAND_IS_CONSTANT_POOL_INDEX,
                         CONSTANT_POOL_ELEMENT_TAG_GLOBAL_FUNCTION_REFERENCE,
                         &zvm::CZVMVirtualThread::_call);
}


ZLS_END_NAMESPACE

